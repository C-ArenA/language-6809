# Syntax highlighting for lwtools assembler toolchain
# See http://www.kingswood-consulting.co.uk/assemblers/index.html for more information

scopeName: 'source.as09-toolchain'
name: '6809/6309 Assembly (AS09)'
fileTypes: [
  'asm'
  'a09'
]
patterns: [
  { include: 'source.6309-assembly' } # as09 supports the 6309 instruction set
  { include: '#comments' }            # Semicolon comments
  { include: '#symbols' }             # Symbols, strings and numbers
  { include: '#directives' }          # Assembler directives for lwtools
]

# Start of repository ---------------------------------------------------------
repository:

  # Comments supported by lwtools
  comments:
    patterns: [
      # Semicolon comments
      {
        match: '(;|(^|\\s)#\\s).*$'
        name: 'comment.line.semicolon.as09-toolchain'
      }
    ]

  # Number formats accepted by lwtools
  symbols:
    patterns: [
      # Strings
      {
        begin: '"'
        beginCaptures:
          0:
            name: 'punctuation.definition.string.begin.as09-toolchain'
        end: '"'
        endCaptures:
          0:
            name: 'punctuation.definition.string.end.as09-toolchain'
        name: 'string.quoted.double.assembly.as09-toolchain'
      }
      # Base number
      {
        match: '\\b([0-9]+(\\#)[a-zA-Z0-9]+)\\b'
        name: 'constant.numeric.as09-toolchain'
      }
      # Binary, prefixed with % and 0b
      {
        match: '(%|0b)[01]+'
        name: 'constant.numeric.binary.as09-toolchain'
      }
      # Octal, prefixed with @
      {
        match: '@[0-7]+'
        name: 'constant.numeric.octal.as09-toolchain'
      }
      # Decimal
      {
        match: '\\b[0-9]+\\b'
        name: 'constant.numeric.decimal.as09-toolchain'
      }
      # Hex, prefixed with ampersand($) or 0x
      {
        match: '(\\$|\\b0x)[A-Fa-f0-9]+\\b'
        name: 'constant.numeric.hex.as09-toolchain'
      }
    ]

  # Assembler directives of lwtools
  directives:
    patterns: [
      # Data directives
      {
        match: '\\b(?i)(d[bsw]|fc[bcw]|fdb)\\b'
        name: 'support.function.pseudo.as09-toolchain'
      }
      # Pseudo functions
      {
        match: '\\b(?i)(align|bss|code|data|cmap|direct|else|end(if|m)?|equ|if|include|list|macro|nolist|noopt|nop|opt|org|page|rmb|set|struct|title)\\b'
        name: 'support.function.pseudo.as09-toolchain'
      }
      # Operators
      {
        match: '\\b(hi|lo)\\b|\\%|!|&|&&|\\^|\\*|\\/|\\-|\\+|~|=|<=|>=|<<|>>|<>|<|>|\\||\\|\\|'
        name: 'keyword.operator.armips-toolchain'
      }
    ]
