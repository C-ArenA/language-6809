# Syntax highlighting for Crossware 6809 assembler toolchain

scopeName: 'source.asm6809'
name: 'asm6809 Assembler'
fileTypes: [
  's'
  'S'
  'asm'
]
patterns: [
  { include: 'source.6809-assembly' } # crossware 6809 assembler supports the 6809 instruction set
  { include: '#symbols' }             # symbols
  { include: '#directives' }          # Assembler directives for crossware6809
]

# start of repository ----------------------------------------------------------
repository:

  # Numbers
  symbols:
    patterns: [
      # Hex, suffixed with h
      {
        match: '-?[0-9]([a-fA-F0-9]+)(?i)h'
        name: 'constant.numeric.hex.asm6809'
      }
      # Binary, prefixed with %
      {
        match: '%[01]+'
        name: 'constant.numeric.binary.asm6809'
      }
      # Binary, suffixed with B
      {
        match: '([0-9]+)B'
        name: 'constant.numeric.binary.asm6809'
      }
      # Octal, prefixed with @
      {
        match: '@[0-7]+'
        name: 'constant.numeric.octal.asm6809'
      }
      # Octal, suffixed with O or Q
      {
        match: '-?([0-9]+)[OQ]'
        name: 'constant.numeric.octal.asm6809'
      }
      # Decimal, prefixed with ampersand(&)
      {
        match: '(&)?([0-9]+)'
        name: 'constant.numeric.decimal.asm6809'
      }
      # Hex, prefixed with dollar sign($)
      {
        match: '-?\\$[A-Fa-f0-9]+'
        name: 'constant.numeric.hex.asm6809'
      }
    ]

  # Assembler directives of crossware6809
  directives:
    patterns: [
      # Data directives
      {
        match: '\\b(?i)(bsz|equ|fc[bc]|f[dq]b|fill|rzb|zmb)\\b'
        name: 'support.function.pseudo.asm6809'
      }
      # Object, source control directives
      {
        match: '\\b(?i)(org|put|rmb|section|code|data|bss|ram|auto|setdp|equ|export|end|include|includebin)\\b'
        name: 'support.function.pseudo.asm6809'
      }
      # Macros directives
      {
        match: '\\b(?i)(macro|endm)\\b'
        name: 'support.function.pseudo.asm6809'
      }
      # Conditional directives
      {
        match: '\\b(?i)(if|elseif|else|endif)\\b'
        name: 'support.function.pseudo.asm6809'
      }
      # Operators
      {
        match: '(!)?\\*|(!)?\\/|\\-|\\+|!\\^|!\\.|!\\+|!X|!<|!>|![RL]'
        name: 'keyword.operator.asm6809'
      }
    ]
